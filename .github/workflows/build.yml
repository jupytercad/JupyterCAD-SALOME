name: Build

on:
  push:
    branches: main
  pull_request:
    branches: '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

      - name: Install dependencies
        run: python -m pip install -U "jupyterlab>=4.0.0,<5"

      - name: Lint the extension
        run: |
          set -eux
          jlpm
          jlpm run lint:check

      - name: Build the extension
        run: |
          set -eux
          python -m pip install .[test]

          jupyter server extension list
          jupyter server extension list 2>&1 | grep -ie "jupytercad_salome.*OK"

          jupyter labextension list
          jupyter labextension list 2>&1 | grep -ie "@jupytercad/jupytercad-salome.*OK"
          python -m jupyterlab.browser_check

      - name: Package the extension
        run: |
          set -eux

          pip install build
          python -m build
          pip uninstall -y "jupytercad_salome" jupyterlab

      - name: Upload extension packages
        uses: actions/upload-artifact@v3
        with:
          name: extension-artifacts
          path: dist/jupytercad_salome*
          if-no-files-found: error

  test_isolated:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          architecture: 'x64'
      - uses: actions/download-artifact@v3
        with:
          name: extension-artifacts
      - name: Install and Test
        run: |
          set -eux
          # Remove NodeJS, twice to take care of system and locally installed node versions.
          sudo rm -rf $(which node)
          sudo rm -rf $(which node)

          pip install "jupyterlab>=4.0.0,<5" jupytercad_salome*.whl


          jupyter server extension list
          jupyter server extension list 2>&1 | grep -ie "jupytercad_salome.*OK"

          jupyter labextension list
          jupyter labextension list 2>&1 | grep -ie "jupytercad-salome.*OK"
          python -m jupyterlab.browser_check --no-browser-test

  integration-tests:
    name: Integration tests
    needs: build
    runs-on: ubuntu-latest

    env:
      PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/pw-browsers

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download extension package
        uses: actions/download-artifact@v3
        with:
          name: extension-artifacts

      - name: Build docker image
        shell: bash -l {0}
        run: |
          set -eux
          cp ./jupytercad_salome*.whl ./ui-tests
          cd ui-tests
          docker build . -f ./Dockerfile -t jupytercad_salome

      - name: Install dependencies
        shell: bash -l {0}
        working-directory: ui-tests
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        run: jlpm install

      - name: Set up browser cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/pw-browsers
          key: ${{ runner.os }}-${{ hashFiles('ui-tests/yarn.lock') }}

      - name: Install browser
        shell: bash -l {0}
        run: npx playwright install chromium
        working-directory: ui-tests

      - name: Execute integration tests
        shell: bash -l {0}
        working-directory: ui-tests
        run: |
          docker run -p 8888:8888 jupytercad_salome:latest
          npx playwright test

      - name: Upload Playwright Test report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jupytercad-playwright-tests
          path: |
            ui-tests/test-results
            ui-tests/playwright-report

  check_links:
    name: Check Links
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - uses: jupyterlab/maintainer-tools/.github/actions/check-links@v1
